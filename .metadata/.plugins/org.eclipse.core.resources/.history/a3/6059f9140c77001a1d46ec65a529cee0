/*
 * temp_sensor.c
 *
 *  Created on: Mar 30, 2020
 *      Author: Nuoya
 */

#include "temp_sensor.h"

uint16_t get_temperature(void)
{
    uint16_t bytes_obtained = I2C_receive_msg(SLAVE_ADDRESS, TRIGGER_TEMP_MEASURE_HOLD, 2);
    if (~(bytes_obtained & BIT1)) //grabbing status reg for temperature
        return bytes_obtained >> 2;
    else
        return 0xFFFF; //Error
}
uint16_t  get_humidity(void)
{
    uint8_t sensor_address = 0x80; //0b1000_000 + R/W
    uint8_t trigger_humid_cmd = 0xE5; //0b1110_0101 (hold master)

    I2C_send_and_receive_msg(sensor_address, trigger_humid_cmd, 2); //send cmd to read humidity
}

void soft_reset(void)
{
    //perform soft reset (rebooting sensor system without switching power off)
    uint8_t sensor_address = 0x80; //0b1000_000 + R/W
    uint8_t soft_reset_cmd = 0xFE; //0b1111_1110 (hold master)
    uint8_t temp_placer = 0;

    uint8_t temp = 0;
    I2C_send_msg(SLAVE_ADDRESS, SOFT_RESET,, temp, 0);
}

